import{SendResult as S}from"@stateflows/common";var r=class{constructor(t){this.url=t;t.slice(-1)!="/"&&(t=t+"/")}getAvailableClasses(){return new Promise(async(t,e)=>{fetch(`${this.url}stateflows/availableClasses`).then(async s=>t(await s.json())).catch(s=>e(s))})}send(t,e){return new Promise(async(s,l)=>{fetch(`${this.url}stateflows/send`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({behaviorIdString:JSON.stringify(t),eventString:JSON.stringify(e)})}).then(async a=>{let o=await a.json(),p=JSON.parse(o.responseString),c=JSON.parse(o.validationString);e.Response=p;let f=new S(e,o.eventStatus,c);s(f)}).catch(a=>l(a))})}};var i=class{constructor(t){this.url=t}getTransport(){return Promise.resolve(new r(this.url))}};function h(n){return new i(n)}export{h as UseHttp};
//# sourceMappingURL=index.mjs.map